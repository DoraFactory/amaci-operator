version: '3.8'

services:
  maci-operator:
    # Choose your image tag strategy:
    # - Use specific version for production (recommended): dorafactory/maci-operator:1.4.0
    # - Use tag for auto-updates: dorafactory/maci-operator:beta (always pulls latest beta)
    # - Use latest for stable releases: dorafactory/maci-operator:latest

    image: dorafactory/maci-operator:$VERSION

    # Alternative: Build from local Dockerfile (uncomment to use)
    # build:
    #   context: .
    #   dockerfile: Dockerfile

    container_name: maci-operator
    restart: unless-stopped

    # Mount host paths into the SAME absolute paths inside container.
    # Use env vars to avoid hardcoding machine-specific paths.
    # Set these via: `./gen-compose-env.sh` or by creating `.env` with
    # HOST_WORK_PATH and HOST_ZKEY_PATH equal to values in your config.toml.
    volumes:
      - ${HOST_WORK_PATH}:${HOST_WORK_PATH}
      - ${HOST_ZKEY_PATH}:${HOST_ZKEY_PATH}:ro

    # Working directory inside container matches your config.workPath
    working_dir: ${HOST_WORK_PATH}

    # Start operator pointing at your config.workPath
    command: ["node", "/app/dist/cli/index.js", "start", "${HOST_WORK_PATH}"]

    # Environment variables (optional, will override config.toml settings)
    # You can set these in a .env file or export them before running docker-compose
    # environment:
      # Uncomment to override config.toml settings
      # - RPC_ENDPOINT=${RPC_ENDPOINT}
      # - IND_ENDPOINT=${IND_ENDPOINT}
      # - DEACTIVATE_RECORDER=${DEACTIVATE_RECORDER}
      # - MNEMONIC=${MNEMONIC}
      # - COORDINATOR_PRI_KEY=${COORDINATOR_PRI_KEY}
      # - LOG_LEVEL=${LOG_LEVEL:-info}
      # - METRICS_PORT=${METRICS_PORT:-3001}

    # Expose metrics port (default 3001, can be overridden in config.toml or env)
    ports:
      - "${METRICS_PORT:-3001}:${METRICS_PORT:-3001}"

    # Resource limits (adjust as needed)
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G

    # Health check
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:${METRICS_PORT:-3001}/metrics', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  default:
    name: maci-network
    external: true
